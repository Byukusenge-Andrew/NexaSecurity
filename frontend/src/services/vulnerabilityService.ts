import { fetchConfig, API_URL } from '@/lib/api';
import { Vulnerability } from "@/types";

export const vulnerabilityApi = {
  getVulnerabilities: async () => {
    const response = await fetch(`${API_URL}/vulnerabilities`, {
      ...fetchConfig
    });
    
    if (!response.ok) throw new Error('Failed to get vulnerabilities');
    return response.json();
  },

  getVulnerabilityDetails: async (id: string): Promise<Vulnerability> => {
    const response = await fetch(`${API_URL}/vulnerabilities/${id}`, {
      ...fetchConfig
    });
    
    if (!response.ok) throw new Error('Failed to get vulnerability details');
    return response.json();
  },

  updateVulnerabilityStatus: async (id: string, status: string) => {
    const response = await fetch(`${API_URL}/vulnerabilities/${id}/status`, {
      method: 'PATCH',
      ...fetchConfig,
      body: JSON.stringify({ status })
    });
    
    if (!response.ok) throw new Error('Failed to update vulnerability status');
    return response.json();
  }
};

export async function runVulnerabilityScan(): Promise<{ success: boolean, message: string }> {
  try {
    const response = await fetch(`${API_URL}/api/vulnerabilities/scan`, {
      method: 'POST',
    });
    
    if (!response.ok) {
      throw new Error('Failed to initiate vulnerability scan');
    }
    
    return await response.json();
  } catch (error) {
    console.error('Error initiating vulnerability scan:', error);
    throw error;
  }
} 